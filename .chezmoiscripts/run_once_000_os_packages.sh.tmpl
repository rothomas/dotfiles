#!/bin/sh

{{- if eq .chezmoi.os "linux"                                                      -}}
{{-   define "package_names"                                                       -}}
{{-     $result := dict "packages" (list) "groups" (list)                          -}}
{{-     range .                                                                    -}}
{{-       if or (not (hasKey . "if_distro")) (eq .if_distro .chezmoi.osRelease.id) -}}
{{-         if and (hasKey . "group") .group                                       -}}
{{-           set $result "groups" (append $result.groups (.package | quote))      -}}
{{-         else                                                                   -}}
{{-           set $result "packages" (append $result.packages (.package | quote))  -}}
{{-         end                                                                    -}}
{{-       end                                                                      -}}
{{-     end                                                                        -}}
{{-     $result                                                                    -}}
{{-   end                                                                          -}}
{{-   $processed := template "package_names" (index .package .package_manager)     -}}
{{-   $packages  := index $processed "packages"                                    -}}
{{-   $groups    := index $processed "groups"                                       }}

{{-   if eq .package_manager "apk"                                                  }}
{{.sudo}} apk add --update bash {{ $packages | join " " }}

{{- else if eq .package_manager "apt"                                               }}
{{.sudo}} apt-get update -yq
{{.sudo}} apt-get install -yqq {{ $packages | join " " }}

{{- else if eq .package_manager "pacman"                                            }}
{{.sudo}} pacman -Sy {{ $packages | join " " }}

{{- else if eq .package_manager "yum"                                               }}
{{.sudo}} yum groupinstall -y {{ $groups | join " " }}
{{.sudo}} yum install -y {{ $packages | join " " }}

{{- end                                                                             }}
{{- end                                                                             }}

gpg --recv-keys {{ .gpg_keys | join " " }}

bash -s <<EOF

{{- if and (eq .chezmoi.os "linux") (eq .chezmoi.username "root" }}
adduser --group --system --gecos "Linuxbrew User" linuxbrew
{{- end }}

{{- range .package.git }}
{{- if or (not (hasKey "if_os")) (eq .chezmoi.os .if_os) }}
if [[ -d "{{ .path }}/.git" ]]; then
  cd "{{ .path }}"
  git pull
  cd -
else
  mkdir -p "$(dirname {{ .path }})"
  git clone -b "{{ .ref }}" "{{ .url }}" "{{ .path }}"
fi
{{- end }}

{{- range .package.curl }}
{{- if or (not (hasKey "if_os")) (eq .chezmoi.os .if_os) }}
mkdir -p "$(dirname {{ .path }})"
curl -LSso "{{ .path }}" "{{ .url }}"
{{- end }}
{{- end }}

{{- if eq .chezmoi.os "darwin" }}
# Install homebrew on Darwin via downloaded install script.
echo '' | NONINTERACTIVE=1 .installers/install_homebrew.sh

{{- else }}
# Install homebrew on Linux from git clone.
mkdir -p "{{ .brew_install_location }}/share/zsh"
{{- if eq .chezmoi.username "root" }}
chown -R linuxbrew:linuxbrew {{ .brew_install_location | quote }}
su - linuxbrew -s /bin/bash <<EOS
{{- end }}
{{ .use_homebrew }}
brew update --force --quiet
chmod -R go-w "{{ .brew_install_location }}/share/zsh"
{{ if eq .chezmoi.username "root" }}EOS{{ end }}

{{- end }}

EOF
