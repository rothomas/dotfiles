{{- $packages := list                                                      -}}
{{- $groups   := list                                                      -}}
{{- if eq $.chezmoi.os "linux"                                             -}}
{{-   $package_list := index $.package $.package_manager                   -}}
{{-   range $package_list                                                  -}}
{{-     if index . "group"                                                 -}}
{{-       $groups = append $groups .package                                -}}
{{-     else                                                               -}}
{{-       $packages = append $packages .package                            -}}
{{-     end                                                                -}}
{{-   end                                                                  -}}
{{- end                                                                    -}}

#!/bin/sh

cd

{{- if eq $.chezmoi.osRelease.id "ubuntu"                                  }}
if command -v unminimize; then
  y | unminimize
fi
{{- end                                                                     }}

{{- if $.as_linuxbrew                                                       }}
##############################################################################
# SET UP LINUXBREW USER FOR HOMEBREW
##############################################################################
adduser --group --system --gecos "Linuxbrew User" linuxbrew
{{- end                                                                     }}

{{- if eq $.package_manager "apk"                                           }}
##############################################################################
# INSTALL APK PACKAGES
##############################################################################
{{.sudo}}apk add --update bash {{ $packages | join " " }}
{{- end                                                                     }}

{{- if eq $.package_manager "apt"                                           }}
##############################################################################
# INSTALL APT PACKAGES
##############################################################################
{{.sudo}}apt-get -yq update
{{.sudo}}apt-get -yqq install {{ $packages | join " " }}
{{- end                                                                     }}

{{- if eq $.package_manager "pacman"                                        }}
##############################################################################
# INSTALL PACMAN PACKAGES
##############################################################################
{{.sudo}}pacman -Sy {{ $packages | join " " }}
{{- end                                                                     }}

{{- if eq $.package_manager "yum"                                           }}
##############################################################################
# INSTALL YUM PACKAGES
##############################################################################
{{.sudo}}yum groupinstall -y {{ $groups | join " " }}
{{.sudo}}yum install -y {{ $packages | join " " }}
{{- end                                                                     }}

##############################################################################
# INSTALL GPG KEYS
##############################################################################
gpg --recv-keys {{ .gpg_keys | join " " }}

bash -s <<EOF
##############################################################################
# INSTALL GIT REPOS
##############################################################################
{{- range $.package.git                                                     }}
{{-   $if_os := index . "if_os"                                             }}
{{-   $path  := index . "path"                                              }}
{{-   $ref   := index . "ref"                                               }}
{{-   $url   := index . "url"                                               }}
{{-   if or (not $if_os) (eq $.chezmoi.os $if_os)                           }}
if [[ -d "{{$path}}/.git" ]]; then
  cd "{{$path}}"
  git pull
  cd -
else
  mkdir -p "$(dirname {{$path}})"
  git clone -b "{{$ref}}" "{{$url}}" "{{$path}}"
fi
{{-   end                                                                   }}
{{- end                                                                     }}

##############################################################################
# DOWNLOAD CURL PACKAGES
##############################################################################
{{- range $.package.curl                                                    }}
{{-   $if_os := index . "if_os"                                             }}
{{-   $path  := index . "path"                                              }}
{{-   $url   := index . "url"                                               }}
{{-   $unzip := index . "unzip"                                             }}
{{-   if or (not $if_os) (eq $.chezmoi.os $if_os)                           }}
curl --create-dirs -LSso "{{$path}}" "{{$url}}"
{{-     if $unzip                                                           }}
gunzip "{{$path}}"
{{-     end                                                                 }}
{{-   end                                                                   }}
{{- end                                                                     }}

##############################################################################
# INSTALL TERMINFO PROFILES
##############################################################################
tic -xe {{ $.package.terminfo | join "," }} .installers/terminfo.src

{{- if eq $.chezmoi.os "darwin"                                             }}
##############################################################################
# SET UP HOMEBREW FOR MAC OS
##############################################################################
echo '' | NONINTERACTIVE=1 .installers/install_homebrew.sh
{{- else                                                                    }}

{{-   if eq $.chezmoi.username "root"                                       }}
##############################################################################
# SET UP HOMEBREW FOR LINUX (as linuxbrew: cannot install as root)
##############################################################################
printf 'eval \x22\x24\x28{{$.brew_install_location}}/bin/brew shellenv\x29\x22' > /home/linuxbrew/.profile
mkdir -p "{{$.brew_install_location}}/share/zsh"
chmod -R go-w "{{$.brew_install_location}}/share/zsh"
chown -R linuxbrew:linuxbrew /home/linuxbrew
su - linuxbrew -s /bin/bash <<< "brew update --force"

{{-  else                                                                   }}
##############################################################################
# SET UP HOMEBREW FOR LINUX (as {{ $.chezmoi.username }})
##############################################################################
eval "$({{$.brew_install_location}}/bin/brew shellenv)"
brew update --force
{{-  end                                                                    }}
{{- end                                                                     }}
EOF

